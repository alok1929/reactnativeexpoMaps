AIzaSyD6plhdVFAh45BRfG9QqVVhZuTyNTroGOI

const GOOGLE_MAPS_API_KEY = 'AIzaSyD6plhdVFAh45BRfG9QqVVhZuTyNTroGOI'; 



import React, { useEffect, useState } from 'react';
import { View, Text, StyleSheet, Platform } from 'react-native';
import MapView, { Marker, Polyline } from 'react-native-maps';
import * as Location from 'expo-location';

export default function App() {
  const [location, setLocation] = useState(null);
  const [errorMsg, setErrorMsg] = useState(null);

  const destination = {
    latitude: 12.9751574,  // Example destination latitude
    longitude: 77.6011326, // Example destination longitude
  };

  useEffect(() => {
    (async () => {
      let { status } = await Location.requestForegroundPermissionsAsync();
      if (status !== 'granted') {
        setErrorMsg('Permission to access location was denied');
        return;
      }

      let { coords } = await Location.getCurrentPositionAsync({});
      setLocation({
        latitude: coords.latitude,
        longitude: coords.longitude,
        latitudeDelta: 0.05,
        longitudeDelta: 0.05,
      });
    })();
  }, []);

  const polylineCoordinates = location ? [
    { latitude: location.latitude, longitude: location.longitude },
    destination,
  ] : [];

  return (
    <View style={styles.container}>
      {location ? (
        <MapView style={styles.map} region={location}>
          <Marker coordinate={location} title="You are here" />
          <Marker coordinate={destination} title="Destination" />
          <Polyline
            coordinates={polylineCoordinates}
            strokeColor="#0000FF" // fallback for when `strokeColors` is not supported by the map-provider
            strokeWidth={8}
          />
        </MapView>
      ) : (
        <Text>{errorMsg || 'Loading...'}</Text>
      )}
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  map: {
    width: '100%',
    height: '100%',
  },
});
